{"version":3,"sources":["components/Timer.js","utils/constants.js","components/InputNumbers.js","utils/filterInputs.js","components/ResultAscending.js","components/CountDown.js","components/ResultDescending.js","utils/sortFunction.js","utils/delay.js","App.js","index.js"],"names":["Timer","language","currentDate","Date","currentTime","getTime","useState","time","setTime","dateUI","setDateUI","timerUI","setTimerUI","resultDate","Intl","DateTimeFormat","dateStyle","format","resultTimer","timeStyle","useEffect","timer","setInterval","clearInterval","className","MESSAGE","InputNumbers","message","setMessage","setDataToRender","GUIDE","WRITE","ERROR","inputNumbers","useRef","ref","placeholder","onClick","inputData","current","value","filteredData","trim","split","filter","el","isNaN","filterInputs","length","ResultAscending","ascendingResult","join","CountDown","setStart","setTimer","timeOut","setTimeout","clearTimeout","ResultDescending","descendingResult","start","sortFunction","dataToSort","type","resultArray","map","Number","mid","Math","floor","left","slice","right","push","shift","delay","ms","Promise","resolve","App","dataToRender","setAscendingResult","setDescendingResult","a","ascendingSort","descendingSort","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGe,SAASA,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SACzBC,EAAc,IAAIC,KAClBC,GAAc,IAAID,MAAOE,UAC/B,EAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,IAAIC,KAAKC,eAAed,EAAU,CACpDe,UAAW,SACTC,OAAOf,GAEJgB,EAAc,IAAIJ,KAAKC,eAAed,EAAU,CACrDkB,UAAW,WACTF,OAAOV,GAUV,OARAa,qBAAU,WACT,IAAIC,EAAQC,aAAY,kBAAMd,GAAQ,SAACD,GAAD,OAAUA,EAAO,SAAO,KAC9D,OAAO,kBAAMgB,cAAcF,MACzB,IAEHD,qBAAU,kBAAMR,EAAWM,KAAc,CAACA,IAC1CE,qBAAU,kBAAMV,EAAUG,KAAa,CAACA,IAGvC,sBAAKW,UAAU,gBAAf,UACC,8BAAMf,IACN,8BAAME,OC7BF,IAAMc,EACL,mGADKA,EAEL,wHAFKA,EAGL,qECiCOC,MAjCf,YAAiE,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBACnCC,EAAwBL,EAAjBM,EAAiBN,EAAVO,EAAUP,EAC1BQ,EAAeC,iBAAO,IAe5B,OACE,qCACE,sBAAKV,UAAU,uBAAf,UACE,+BAAOG,IACP,0BACEQ,IAAKF,EACLG,YAAY,iMAGhB,wBAAQZ,UAAU,uBAAuBa,QAtBzB,WAClBT,EAAWE,GAEX,IAAMQ,EAAYL,EAAaM,QAAQC,MACvC,GAAKF,EAAL,CAIA,IAAMG,ECfkB,SAACH,GAC5B,OAAOA,EACLI,OACAC,MAAM,KACNC,QAAO,SAACC,GAAD,OAAQA,EAAGH,UAClBE,QAAO,SAACC,GAAD,OAASC,MAAMD,MDUAE,CAAaT,GACN,IAAxBG,EAAaO,QAAcpB,EAAWI,GAC1CH,EAAgBY,QALdb,EAAWG,IAiBX,uDEhBSkB,MAXf,YAA+C,IAApBC,EAAmB,EAAnBA,gBAC1B,OACC,sBAAK1B,UAAU,qBAAf,UACC,yEACA,qBAAKA,UAAU,gBAAf,SACC,8BAAM0B,EAAgBC,KAAK,cCchBC,EAnBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA0B/C,mBAAS,GAAnC,mBAAOe,EAAP,KAAciC,EAAd,KAeA,OAbAlC,qBAAU,WACR,IAQMmC,EAAUC,YARM,WACN,IAAVnC,IACFoC,aAAaF,GACbF,GAAS,IAEPhC,EAAQ,GAAGiC,EAASjC,EAAQ,KAGQ,KAC1C,OAAO,kBAAMoC,aAAaF,MACzB,CAAClC,IAEG,qBAAKG,UAAU,mBAAf,SAAmCH,KCJ7BqC,MAXf,YAAkE,IAAtCC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,MAAOP,EAAY,EAAZA,SACnD,OACE,sBAAK7B,UAAU,sBAAf,UACE,yEACA,qBAAKA,UAAU,gBAAf,SACE,8BAAMoC,EAAQ,cAAC,EAAD,CAAWP,SAAUA,IAAeM,EAAiBR,KAAK,cCRnEU,EAAe,SAAfA,EAAgBC,GAAoC,IAAxBC,EAAuB,uDAAhB,YACzCC,EAAc,GAIpB,IADAF,EAAaA,EAAWG,KAAI,SAACpB,GAAD,OAAQqB,OAAOrB,OAC5BG,OAAS,EAAG,OAAOc,EAOlC,IALA,IAAMK,EAAMC,KAAKC,MAAMP,EAAWd,OAAS,GACrCsB,EAAOT,EAAaC,EAAWS,MAAM,EAAGJ,GAAMJ,GAC9CS,EAAQX,EAAaC,EAAWS,MAAMJ,GAAMJ,GAG3CO,EAAKtB,OAAS,GAAKwB,EAAMxB,OAAS,GAC3B,cAATe,EACHO,EAAK,GAAKE,EAAM,GACbR,EAAYS,KAAKH,EAAKI,SACtBV,EAAYS,KAAKD,EAAME,SAE1BJ,EAAK,GAAKE,EAAM,GACbR,EAAYS,KAAKD,EAAME,SACvBV,EAAYS,KAAKH,EAAKI,SAI3B,KAAuB,IAAhBJ,EAAKtB,QAAgBwB,EAAMxB,OAAS,GAC1CgB,EAAYS,KAAKD,EAAME,SAGxB,KAAOJ,EAAKtB,OAAS,GAAsB,IAAjBwB,EAAMxB,QAC/BgB,EAAYS,KAAKH,EAAKI,SAGvB,OAAOV,GChCKW,EAAQ,SAACC,GAAD,IAAKpC,EAAL,uDAAa,GAAb,OACnB,IAAIqC,SAAQ,SAACC,GAAD,OAAatB,YAAW,kBAAMsB,EAAQtC,KAAQoC,O,MC6C7CG,MApCf,WACE,MAA0BzE,oBAAS,GAAnC,mBAAOsD,EAAP,KAAcP,EAAd,KACA,EAAwC/C,mBAAS,IAAjD,mBAAO0E,EAAP,KAAqBnD,EAArB,KACA,EAA8CvB,mBAAS,IAAvD,mBAAO4C,EAAP,KAAwB+B,EAAxB,KACA,EAAgD3E,mBAAS,IAAzD,mBAAOqD,EAAP,KAAyBuB,EAAzB,KACA,EAA8B5E,mBAASmB,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAaA,OAXAR,oBAAS,sBAAC,8BAAA+D,EAAA,yDACoB,IAAxBH,EAAahC,OADT,wDAGRK,GAAS,GAHD,SAIoBsB,EAAM,EAAGd,EAAamB,EAAc,cAJxD,cAIFI,EAJE,OAKRH,EAAmBG,GALX,SAOqBT,EAAM,IAAMd,EAAamB,EAAc,eAP5D,OAOFK,EAPE,OAQRH,EAAoBG,GARZ,4CASP,CAACL,IAGF,qBAAKxD,UAAU,MAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,2EAEA,cAACxB,EAAD,CAAOC,SAAU,UAEjB,cAAC,EAAD,CAAoB0B,UAASC,aAAYC,oBACzC,cAAC,EAAD,CAAiBqB,gBAAiBA,IAClC,cAAC,EAAD,CAAwBS,mBAAkBC,QAAOP,aAEjD,cAACrD,EAAD,CAAOC,SAAU,UACjB,sBAAMuB,UAAU,YAAhB,0CCnCR8D,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.36495b9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Timer({ language }) {\r\n\tconst currentDate = new Date();\r\n\tconst currentTime = new Date().getTime();\r\n\tconst [time, setTime] = useState(currentTime);\r\n\tconst [dateUI, setDateUI] = useState(\"\");\r\n\tconst [timerUI, setTimerUI] = useState(\"\");\r\n\r\n\tconst resultDate = new Intl.DateTimeFormat(language, {\r\n\t\tdateStyle: \"full\",\r\n\t}).format(currentDate);\r\n\r\n\tconst resultTimer = new Intl.DateTimeFormat(language, {\r\n\t\ttimeStyle: \"medium\",\r\n\t}).format(time);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer = setInterval(() => setTime((time) => time + 1000), 1000);\r\n\t\treturn () => clearInterval(timer);\r\n\t}, []);\r\n\r\n\tuseEffect(() => setTimerUI(resultTimer), [resultTimer]);\r\n\tuseEffect(() => setDateUI(resultDate), [resultDate]);\r\n\r\n\treturn (\r\n\t\t<div className=\"timer section\">\r\n\t\t\t<div>{dateUI}</div>\r\n\t\t\t<div>{timerUI}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const MESSAGE = {\r\n\tGUIDE: \"정렬하고 싶은 숫자를 입력해주세요 :)\",\r\n\tWRITE: \"⚠ 입력하지 않았네요? 값을 입력해야합니다 : ]\",\r\n\tERROR: \"❌ 숫자를 써주시겠어요? :(\",\r\n};\r\n","import { useRef } from 'react';\r\nimport { MESSAGE } from '../utils/constants';\r\nimport { filterInputs } from '../utils/filterInputs';\r\nfunction InputNumbers({ message, setMessage, setDataToRender }) {\r\n  const { GUIDE, WRITE, ERROR } = MESSAGE;\r\n  const inputNumbers = useRef('');\r\n\r\n  const handleClick = () => {\r\n    setMessage(GUIDE);\r\n\r\n    const inputData = inputNumbers.current.value;\r\n    if (!inputData) {\r\n      setMessage(WRITE);\r\n      return;\r\n    }\r\n    const filteredData = filterInputs(inputData);\r\n    if (filteredData.length === 0) setMessage(ERROR);\r\n    setDataToRender(filteredData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"number-input section\">\r\n        <span>{message}</span>\r\n        <textarea\r\n          ref={inputNumbers}\r\n          placeholder=\"숫자를 콤마(,)로 구분해주세요.&#13;&#10;유효하지 않은 값은 제외됩니다.&#13;&#10;ex) 3,12,7,89,100\"\r\n        />\r\n      </div>\r\n      <button className=\"start-button section\" onClick={handleClick}>\r\n        정렬 시작하기\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputNumbers;\r\n","export const filterInputs = (inputData) => {\r\n\treturn inputData\r\n\t\t.trim()\r\n\t\t.split(\",\")\r\n\t\t.filter((el) => el.trim())\r\n\t\t.filter((el) => !isNaN(el));\r\n};\r\n","import React from \"react\";\r\n\r\nfunction ResultAscending({ ascendingResult }) {\r\n\treturn (\r\n\t\t<div className=\"output-asc section\">\r\n\t\t\t<span>오름차순 결과</span>\r\n\t\t\t<div className=\"number-output\">\r\n\t\t\t\t<div>{ascendingResult.join(\", \")}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultAscending;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst CountDown = ({ setStart }) => {\r\n  const [timer, setTimer] = useState(3);\r\n\r\n  useEffect(() => {\r\n    const playCountDown = () => {\r\n      if (timer === 1) {\r\n        clearTimeout(timeOut);\r\n        setStart(false);\r\n      }\r\n      if (timer > 0) setTimer(timer - 1);\r\n    };\r\n\r\n    const timeOut = setTimeout(playCountDown, 1000);\r\n    return () => clearTimeout(timeOut);\r\n  }, [timer]);\r\n\r\n  return <div className=\"countdown-number\">{timer}</div>;\r\n};\r\n\r\nexport default CountDown;\r\n","import React from 'react';\r\nimport CountDown from './CountDown';\r\n\r\nfunction ResultDescending({ descendingResult, start, setStart }) {\r\n  return (\r\n    <div className=\"output-desc section\">\r\n      <span>내림차순 결과</span>\r\n      <div className=\"number-output\">\r\n        <div>{start ? <CountDown setStart={setStart} /> : descendingResult.join(', ')}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultDescending;\r\n","export const sortFunction = (dataToSort, type = \"ascending\") => {\r\n\tconst resultArray = [];\r\n\r\n\t//divide\r\n\tdataToSort = dataToSort.map((el) => Number(el));\r\n\tif (dataToSort.length < 2) return dataToSort;\r\n\r\n\tconst mid = Math.floor(dataToSort.length / 2);\r\n\tconst left = sortFunction(dataToSort.slice(0, mid), type);\r\n\tconst right = sortFunction(dataToSort.slice(mid), type);\r\n\r\n\t//conquer\r\n\twhile (left.length > 0 && right.length > 0) {\r\n\t\tif (type === \"ascending\") {\r\n\t\t\tleft[0] < right[0]\r\n\t\t\t\t? resultArray.push(left.shift())\r\n\t\t\t\t: resultArray.push(right.shift());\r\n\t\t} else {\r\n\t\t\tleft[0] < right[0]\r\n\t\t\t\t? resultArray.push(right.shift())\r\n\t\t\t\t: resultArray.push(left.shift());\r\n\t\t}\r\n\t}\r\n\r\n\twhile (left.length === 0 && right.length > 0) {\r\n\t\tresultArray.push(right.shift());\r\n\t}\r\n\r\n\twhile (left.length > 0 && right.length === 0) {\r\n\t\tresultArray.push(left.shift());\r\n\t}\r\n\r\n\treturn resultArray;\r\n};\r\n","export const delay = (ms, value = '') =>\r\n  new Promise((resolve) => setTimeout(() => resolve(value), ms));\r\n","import { useState, useEffect } from 'react';\r\nimport Timer from './components/Timer';\r\nimport InputNumbers from './components/InputNumbers';\r\nimport ResultAscending from './components/ResultAscending';\r\nimport ResultDescending from './components/ResultDescending';\r\nimport { sortFunction } from './utils/sortFunction';\r\nimport { MESSAGE } from './utils/constants';\r\nimport { delay } from './utils/delay';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [start, setStart] = useState(false);\r\n  const [dataToRender, setDataToRender] = useState([]);\r\n  const [ascendingResult, setAscendingResult] = useState([]);\r\n  const [descendingResult, setDescendingResult] = useState([]);\r\n  const [message, setMessage] = useState(MESSAGE.GUIDE);\r\n\r\n  useEffect(async () => {\r\n    if (dataToRender.length === 0) return;\r\n\r\n    setStart(true);\r\n    const ascendingSort = await delay(0, sortFunction(dataToRender, 'ascending'));\r\n    setAscendingResult(ascendingSort);\r\n\r\n    const descendingSort = await delay(3000, sortFunction(dataToRender, 'descending'));\r\n    setDescendingResult(descendingSort);\r\n  }, [dataToRender]);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='sorting-machine section'>\r\n        <h1>🤖 Sorting Machine 🤖</h1>\r\n\r\n        <Timer language={'kr-KO'} />\r\n\r\n        <InputNumbers {...{ message, setMessage, setDataToRender }} />\r\n        <ResultAscending ascendingResult={ascendingResult} />\r\n        <ResultDescending {...{ descendingResult, start, setStart }} />\r\n\r\n        <Timer language={'en-US'} />\r\n        <span className='copyright'>@bohyunkang & @skawnkk</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}