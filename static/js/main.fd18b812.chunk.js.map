{"version":3,"sources":["components/Timer.js","utils/constants.js","utils/filterInputs.js","components/InputNumbers.js","components/ResultAscending.js","components/CountDown.js","components/ResultDescending.js","utils/sortFunction.js","App.js","index.js"],"names":["Timer","language","currentDate","Date","currentTime","getTime","useState","time","setTime","dateUI","setDateUI","timerUI","setTimerUI","resultDate","Intl","DateTimeFormat","dateStyle","format","resultTimer","timeStyle","useEffect","timer","setInterval","clearInterval","className","MESSAGE","filterInputs","inputData","trim","split","filter","el","isNaN","InputNumbers","message","setMessage","setDataToRender","GUIDE","WRITE","ERROR","inputNumbers","useRef","ref","placeholder","onClick","current","value","length","ResultAscending","ascendingResult","join","CountDown","start","setStart","setTimer","timeOut","ResultDescending","descendingResult","sortFunction","dataToSort","type","resultArray","map","Number","mid","Math","floor","left","slice","right","push","shift","App","dataToRender","setAscendingResult","setDescendingResult","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd18b812.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Timer({ language }) {\r\n\tconst currentDate = new Date();\r\n\tconst currentTime = new Date().getTime();\r\n\tconst [time, setTime] = useState(currentTime);\r\n\tconst [dateUI, setDateUI] = useState(\"\");\r\n\tconst [timerUI, setTimerUI] = useState(\"\");\r\n\r\n\tconst resultDate = new Intl.DateTimeFormat(language, {\r\n\t\tdateStyle: \"full\",\r\n\t}).format(currentDate);\r\n\r\n\tconst resultTimer = new Intl.DateTimeFormat(language, {\r\n\t\ttimeStyle: \"medium\",\r\n\t}).format(time);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer = setInterval(() => setTime((time) => time + 1000), 1000);\r\n\t\treturn () => clearInterval(timer);\r\n\t}, []);\r\n\r\n\tuseEffect(() => setTimerUI(resultTimer), [resultTimer]);\r\n\tuseEffect(() => setDateUI(resultDate), [resultDate]);\r\n\r\n\treturn (\r\n\t\t<div className=\"timer section\">\r\n\t\t\t<div>{dateUI}</div>\r\n\t\t\t<div>{timerUI}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","export const MESSAGE = {\r\n\tGUIDE: \"정렬하고 싶은 숫자를 입력해주세요 :)\",\r\n\tWRITE: \"⚠ 입력하지 않았네요? 값을 입력해야합니다 : ]\",\r\n\tERROR: \"❌ 숫자를 써주시겠어요? :(\",\r\n};\r\n","export const filterInputs = (inputData) => {\r\n\treturn inputData\r\n\t\t.trim()\r\n\t\t.split(\",\")\r\n\t\t.filter((el) => el.trim())\r\n\t\t.filter((el) => !isNaN(el));\r\n};\r\n","import { useRef } from \"react\";\r\nimport { MESSAGE } from \"../utils/constants\";\r\nimport { filterInputs } from \"../utils/filterInputs\";\r\nfunction InputNumbers({ message, setMessage, setDataToRender }) {\r\n\tconst { GUIDE, WRITE, ERROR } = MESSAGE;\r\n\tconst inputNumbers = useRef(\"\");\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetMessage(GUIDE);\r\n\r\n\t\tconst inputData = inputNumbers.current.value;\r\n\t\tif (!inputData) {\r\n\t\t\tsetMessage(WRITE);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst filteredData = filterInputs(inputData);\r\n\t\tif (filteredData.length === 0) setMessage(ERROR);\r\n\t\tsetDataToRender(filterInputs(inputData));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"number-input section\">\r\n\t\t\t\t<span>{message}</span>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tref={inputNumbers}\r\n\t\t\t\t\tplaceholder=\"숫자를 콤마(,)로 구분해주세요.&#13;&#10;유효하지 않은 값은 제외됩니다.&#13;&#10;ex) 3,12,7,89,100\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"start-button section\" onClick={handleClick}>\r\n\t\t\t\t정렬 시작하기\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default InputNumbers;\r\n","import React from \"react\";\r\n\r\nfunction ResultAscending({ ascendingResult }) {\r\n\treturn (\r\n\t\t<div className=\"output-asc section\">\r\n\t\t\t<span>오름차순 결과</span>\r\n\t\t\t<div className=\"number-output\">\r\n\t\t\t\t<div>{ascendingResult.join(\", \")}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultAscending;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst CountDown = ({ start, setStart }) => {\r\n\tconst [timer, setTimer] = useState(3);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timeOut = setInterval(() => {\r\n\t\t\tif (timer === 1) {\r\n\t\t\t\tclearInterval(timeOut);\r\n\t\t\t\tsetStart(false);\r\n\t\t\t}\r\n\t\t\tif (timer > 0) setTimer(timer - 1);\r\n\t\t}, 1000);\r\n\t\treturn () => clearInterval(timeOut);\r\n\t}, [timer]);\r\n\r\n\treturn <div className=\"countdown-number\">{timer}</div>;\r\n};\r\n\r\nexport default CountDown;\r\n","import React from \"react\";\r\nimport CountDown from \"./CountDown\";\r\n\r\nfunction ResultDescending({ descendingResult, start, setStart }) {\r\n\treturn (\r\n\t\t<div className=\"output-desc section\">\r\n\t\t\t<span>내림차순 결과</span>\r\n\t\t\t<div className=\"number-output\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{start ? (\r\n\t\t\t\t\t\t<CountDown {...{ start, setStart }} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tdescendingResult.join(\", \")\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultDescending;\r\n","export const sortFunction = (dataToSort, type = \"ascending\") => {\r\n\tconst resultArray = [];\r\n\r\n\t//divide\r\n\tdataToSort = dataToSort.map((el) => Number(el));\r\n\tif (dataToSort.length < 2) return dataToSort;\r\n\r\n\tconst mid = Math.floor(dataToSort.length / 2);\r\n\tconst left = sortFunction(dataToSort.slice(0, mid), type);\r\n\tconst right = sortFunction(dataToSort.slice(mid), type);\r\n\r\n\t//conquer\r\n\twhile (left.length > 0 && right.length > 0) {\r\n\t\tif (type === \"ascending\") {\r\n\t\t\tleft[0] < right[0]\r\n\t\t\t\t? resultArray.push(left.shift())\r\n\t\t\t\t: resultArray.push(right.shift());\r\n\t\t} else {\r\n\t\t\tleft[0] < right[0]\r\n\t\t\t\t? resultArray.push(right.shift())\r\n\t\t\t\t: resultArray.push(left.shift());\r\n\t\t}\r\n\t}\r\n\r\n\twhile (left.length === 0 && right.length > 0) {\r\n\t\tresultArray.push(right.shift());\r\n\t}\r\n\r\n\twhile (left.length > 0 && right.length === 0) {\r\n\t\tresultArray.push(left.shift());\r\n\t}\r\n\r\n\treturn resultArray;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Timer from \"./components/Timer\";\r\nimport InputNumbers from \"./components/InputNumbers\";\r\nimport ResultAscending from \"./components/ResultAscending\";\r\nimport ResultDescending from \"./components/ResultDescending\";\r\nimport { sortFunction } from \"./utils/sortFunction\";\r\nimport { MESSAGE } from \"./utils/constants\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\tconst { GUIDE } = MESSAGE;\r\n\tconst [start, setStart] = useState(false);\r\n\tconst [dataToRender, setDataToRender] = useState([]);\r\n\tconst [ascendingResult, setAscendingResult] = useState([]);\r\n\tconst [descendingResult, setDescendingResult] = useState([]);\r\n\tconst [message, setMessage] = useState(GUIDE);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataToRender.length === 0) return;\r\n\t\tsetAscendingResult(sortFunction(dataToRender, \"ascending\"));\r\n\t\tsetTimeout(\r\n\t\t\t() => setDescendingResult(sortFunction(dataToRender, \"descending\")),\r\n\t\t\t3000\r\n\t\t);\r\n\t\tsetStart(true);\r\n\t}, [dataToRender]);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"sorting-machine section\">\r\n\t\t\t\t<h1>🤖Sorting Machine🤖</h1>\r\n\r\n\t\t\t\t<Timer language={\"kr-KO\"} />\r\n\r\n\t\t\t\t<InputNumbers {...{ message, setMessage, setDataToRender }} />\r\n\t\t\t\t<ResultAscending ascendingResult={ascendingResult} />\r\n\t\t\t\t<ResultDescending {...{ descendingResult, start, setStart }} />\r\n\r\n\t\t\t\t<Timer language={\"en-US\"} />\r\n\t\t\t\t<span className=\"copyright\">@bohyunkang & @skawnkk</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}